{"ast":null,"code":"var _jsxFileName = \"/home/master/Documents/IA_Exam/Frontend/src/components/Tabla.js\";\n\n/** @format */\nimport React, { Component } from 'react';\nimport { Tabs, Tab, Container } from 'react-bootstrap';\nimport Order from './Order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Tabla extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      pending: [],\n      in_process: [],\n      completed: [],\n      delivered: [],\n      canceled: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      data\n    } = this.props;\n    console.log;\n  }\n\n  render() {\n    const pending = this.props.data.map(element => element.status === 'Pending');\n    const in_process = this.props.data.map(element => element.status === 'In Process');\n    const completed = this.props.data.map(element => element.status === 'Completed');\n    const delivered = this.props.data.map(element => element.status === 'Delivered');\n    const canceled = this.props.data.map(element => element.status === 'Canceled');\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"profile\",\n        id: \"uncontrolled-tab-example\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"pending\",\n          title: \"Pending\",\n          children: pending.map((element, idx) => {\n            return /*#__PURE__*/_jsxDEV(Order, {\n              id: idx,\n              sku: element.sku,\n              order: element.order,\n              status: element.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"in_process\",\n          title: \"In Process\",\n          children: in_process.map((element, idx) => {\n            return /*#__PURE__*/_jsxDEV(Order, {\n              id: idx,\n              sku: element.sku,\n              order: element.order,\n              status: element.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"completed\",\n          title: \"Completed\",\n          children: completed.map((element, idx) => {\n            return /*#__PURE__*/_jsxDEV(Order, {\n              id: idx,\n              sku: element.sku,\n              order: element.order,\n              status: element.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"delivered\",\n          title: \"Delivered\",\n          children: delivered.map((element, idx) => {\n            return /*#__PURE__*/_jsxDEV(Order, {\n              id: idx,\n              sku: element.sku,\n              order: element.order,\n              status: element.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"canceled\",\n          title: \"Canceled\",\n          children: canceled.map((element, idx) => {\n            return /*#__PURE__*/_jsxDEV(Order, {\n              id: idx,\n              sku: element.sku,\n              order: element.order,\n              status: element.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Tabla;","map":{"version":3,"sources":["/home/master/Documents/IA_Exam/Frontend/src/components/Tabla.js"],"names":["React","Component","Tabs","Tab","Container","Order","Tabla","constructor","props","state","pending","in_process","completed","delivered","canceled","componentDidMount","data","console","log","render","map","element","status","idx","sku","order"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Component } from 'react';\nimport { Tabs, Tab, Container } from 'react-bootstrap';\nimport Order from './Order';\n\nclass Tabla extends Component {\n    constructor(props) {\n        super();\n        this.state={\n            pending:[],\n            in_process:[],\n            completed:[],\n            delivered:[],\n            canceled:[]\n        }\n    }\n    componentDidMount() {\n        const {data}=this.props\n        console.log\n    }\n\n    render() {\n        const pending = this.props.data.map((element) => element.status === 'Pending');\n        const in_process = this.props.data.map((element) => element.status === 'In Process');\n        const completed = this.props.data.map((element) => element.status === 'Completed');\n        const delivered = this.props.data.map((element) => element.status === 'Delivered');\n        const canceled = this.props.data.map((element) => element.status === 'Canceled');\n        return (\n            <Container fluid>\n                <Tabs defaultActiveKey='profile' id='uncontrolled-tab-example' className='mb-3'>\n                    <Tab eventKey='pending' title='Pending'>\n                        {pending.map((element, idx) => {\n                            return <Order id={idx} sku={element.sku} order={element.order} status={element.status} />;\n                        })}\n                    </Tab>\n                    <Tab eventKey='in_process' title='In Process'>\n                        {in_process.map((element, idx) => {\n                            return <Order id={idx} sku={element.sku} order={element.order} status={element.status} />;\n                        })}\n                    </Tab>\n                    <Tab eventKey='completed' title='Completed'>\n                        {completed.map((element, idx) => {\n                            return <Order id={idx} sku={element.sku} order={element.order} status={element.status} />;\n                        })}\n                    </Tab>\n                    <Tab eventKey='delivered' title='Delivered'>\n                        {delivered.map((element, idx) => {\n                            return <Order id={idx} sku={element.sku} order={element.order} status={element.status} />;\n                        })}\n                    </Tab>\n                    <Tab eventKey='canceled' title='Canceled'>\n                        {canceled.map((element, idx) => {\n                            return <Order id={idx} sku={element.sku} order={element.order} status={element.status} />;\n                        })}\n                    </Tab>\n                </Tabs>\n            </Container>\n        );\n    }\n}\nexport default Tabla;\n"]},"metadata":{},"sourceType":"module"}