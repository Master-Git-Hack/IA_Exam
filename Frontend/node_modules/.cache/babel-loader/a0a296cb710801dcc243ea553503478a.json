{"ast":null,"code":"var _jsxFileName = \"/home/master/Documents/IA_Exam/Frontend/src/components/Make_Order.js\";\n\n/** @format */\nimport React, { Component } from 'react';\nimport { Row, Col, Button, ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Make_Order extends Component {\n  constructor(props) {\n    super();\n\n    this.AddOrder = () => {\n      const {\n        type,\n        quantity,\n        order\n      } = this.state;\n      this.setState({\n        order: [...order, {\n          type,\n          quantity\n        }]\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.make_order = async () => {\n      const {\n        order\n      } = this.state;\n      await fetch('http://localhost:8080/api/transaction/add', {\n        method: 'POST',\n        mode: 'cors',\n        // no-cors, *cors, same-origin\n        cache: 'no-cache',\n        // *default, no-cache, reload, force-cache, only-if-cached\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sku: this.props.sku,\n          order,\n          status: 'Pending'\n        })\n      }).then(response => response.json()).then(data => alert(data.response ? `Pedido #000${this.props.sku} se ha realizado de forma exitosa!` : `Algo salio mal con el pedido #000${this.props.sku}, favor de intentar mas tarde`));\n      window.location.reload();\n    };\n\n    this.state = {\n      elements: {},\n      order: [],\n      type: 'burger',\n      quantity: 1\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/api/manage/stock', {\n      method: 'GET',\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      elements: data.response\n    }));\n  }\n\n  render() {\n    const {\n      elements,\n      order\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"g-2\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            onChange: this.handleChange,\n            children: Object.keys(elements).map(i => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: elements[i].type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: true,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"quantity\",\n            onChange: this.handleChange,\n            type: \"number\",\n            min: 1,\n            max: 50,\n            placeholder: \"n >= 1, n <= 50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.AddOrder,\n            children: \"Agregar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: order.map((elmnt, idx) => {\n            return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [elmnt.type, \" - \", elmnt.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: this.make_order,\n            children: \"Hacer Pedido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Make_Order;","map":{"version":3,"sources":["/home/master/Documents/IA_Exam/Frontend/src/components/Make_Order.js"],"names":["React","Component","Row","Col","Button","ListGroup","Make_Order","constructor","props","AddOrder","type","quantity","order","state","setState","handleChange","e","target","name","value","make_order","fetch","method","mode","cache","headers","body","JSON","stringify","sku","status","then","response","json","data","alert","window","location","reload","elements","componentDidMount","render","Object","keys","map","i","elmnt","idx"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,iBAA5C;;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;;AADe,SAqBnBC,QArBmB,GAqBR,MAAM;AACb,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,QAAR;AAAkBC,QAAAA;AAAlB,UAA4B,KAAKC,KAAvC;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAW;AAAEF,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAX;AAAT,OAAd;AACH,KAxBkB;;AAAA,SAyBnBI,YAzBmB,GAyBHC,CAAD,IAAO;AAClB,WAAKF,QAAL,CAAc;AAAE,SAACE,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA5B,OAAd;AACH,KA3BkB;;AAAA,SA4BnBC,UA5BmB,GA4BN,YAAY;AACrB,YAAM;AAAER,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACA,YAAMQ,KAAK,CAAC,2CAAD,EAA8C;AACrDC,QAAAA,MAAM,EAAE,MAD6C;AAErDC,QAAAA,IAAI,EAAE,MAF+C;AAEvC;AACdC,QAAAA,KAAK,EAAE,UAH8C;AAGlC;AACnBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAJ4C;AAOrDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWqB,GADC;AAEjBjB,UAAAA,KAFiB;AAGjBkB,UAAAA,MAAM,EAAE;AAHS,SAAf;AAP+C,OAA9C,CAAL,CAaDC,IAbC,CAaKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAblB,EAcDF,IAdC,CAcKG,IAAD,IACFC,KAAK,CACDD,IAAI,CAACF,QAAL,GACO,cAAa,KAAKxB,KAAL,CAAWqB,GAAI,oCADnC,GAEO,oCAAmC,KAAKrB,KAAL,CAAWqB,GAAI,+BAHxD,CAfP,CAAN;AAqBAO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KApDkB;;AAEf,SAAKzB,KAAL,GAAa;AACT0B,MAAAA,QAAQ,EAAE,EADD;AAET3B,MAAAA,KAAK,EAAE,EAFE;AAGTF,MAAAA,IAAI,EAAE,QAHG;AAITC,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAMH;;AACD6B,EAAAA,iBAAiB,GAAG;AAChBnB,IAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC5CC,MAAAA,MAAM,EAAE,KADoC;AAE5CC,MAAAA,IAAI,EAAE,MAFsC;AAE9B;AACdC,MAAAA,KAAK,EAAE,UAHqC;AAGzB;AACnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAJmC,KAA3C,CAAL,CAQKM,IARL,CAQWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARxB,EASKF,IATL,CASWG,IAAD,IAAU,KAAKpB,QAAL,CAAc;AAAEyB,MAAAA,QAAQ,EAAEL,IAAI,CAACF;AAAjB,KAAd,CATpB;AAUH;;AAkCDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA,QAAF;AAAY3B,MAAAA;AAAZ,QAAsB,KAAKC,KAAjC;AACA,wBACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,MAAb;AAAoB,YAAA,QAAQ,EAAE,KAAKE,YAAnC;AAAA,sBACK2B,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,GAAtB,CAA2BC,CAAD,IAAO;AAC9B,kCAAO;AAAA,0BAASN,QAAQ,CAACM,CAAD,CAAR,CAAYnC;AAArB;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,GAAD;AAAK,UAAA,EAAE,MAAP;AAAA,iCACI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,QAAQ,EAAE,KAAKK,YAFnB;AAGI,YAAA,IAAI,EAAC,QAHT;AAII,YAAA,GAAG,EAAE,CAJT;AAKI,YAAA,GAAG,EAAE,EALT;AAMI,YAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAkBI,QAAC,GAAD;AAAK,UAAA,EAAE,MAAP;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAE,KAAKN,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAyBI,QAAC,GAAD;AAAA,+BACI,QAAC,SAAD;AAAA,oBACKG,KAAK,CAACgC,GAAN,CAAU,CAACE,KAAD,EAAOC,GAAP,KAAe;AACtB,gCACI,QAAC,SAAD,CAAW,IAAX;AAAA,yBACKD,KAAK,CAACpC,IADX,SACoBoC,KAAK,CAACnC,QAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WANA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAzBJ,eAoCI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,MAAP;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAE,KAAKS,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8CH;;AAvG8B;;AAyGnC,eAAed,UAAf","sourcesContent":["/** @format */\n\nimport React, { Component } from 'react';\nimport { Row, Col, Button, ListGroup } from 'react-bootstrap';\n\nclass Make_Order extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            elements: {},\n            order: [],\n            type: 'burger',\n            quantity: 1,\n        };\n    }\n    componentDidMount() {\n        fetch('http://localhost:8080/api/manage/stock', {\n            method: 'GET',\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then((response) => response.json())\n            .then((data) => this.setState({ elements: data.response }));\n    }\n    AddOrder = () => {\n        const { type, quantity, order } = this.state;\n        this.setState({ order: [...order, { type, quantity }] });\n    };\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    make_order = async () => {\n        const { order } = this.state;\n        await fetch('http://localhost:8080/api/transaction/add', {\n            method: 'POST',\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                sku: this.props.sku,\n                order,\n                status: 'Pending',\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) =>\n                alert(\n                    data.response\n                        ? `Pedido #000${this.props.sku} se ha realizado de forma exitosa!`\n                        : `Algo salio mal con el pedido #000${this.props.sku}, favor de intentar mas tarde`\n                )\n            );\n        window.location.reload();\n    };\n\n    render() {\n        const { elements, order } = this.state;\n        return (\n            <Row className='g-2'>\n                <Row>\n                    <Col>\n                        <select name='type' onChange={this.handleChange}>\n                            {Object.keys(elements).map((i) => {\n                                return <option>{elements[i].type}</option>;\n                            })}\n                        </select>\n                    </Col>\n                    <Col md>\n                        <input\n                            name='quantity'\n                            onChange={this.handleChange}\n                            type='number'\n                            min={1}\n                            max={50}\n                            placeholder='n >= 1, n <= 50'\n                        />\n                    </Col>\n                    <Col md>\n                        <Button variant='primary' onClick={this.AddOrder}>\n                            Agregar\n                        </Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <ListGroup>\n                        {order.map((elmnt,idx) => {\n                            return (\n                                <ListGroup.Item>\n                                    {elmnt.type} - {elmnt.quantity}\n                                </ListGroup.Item>\n                            );\n                        })}\n                    </ListGroup>\n                </Row>\n                <Row>\n                    <Col md>\n                        <Button variant='success' onClick={this.make_order}>\n                            Hacer Pedido\n                        </Button>\n                    </Col>\n                </Row>\n            </Row>\n        );\n    }\n}\nexport default Make_Order;\n"]},"metadata":{},"sourceType":"module"}